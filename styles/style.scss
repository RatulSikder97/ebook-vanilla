html,
body {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    scroll-behavior: smooth !important;
}

// basic setup
.w-100 {
    width: 100%;
}

.h-100 {
    height: 100%;
}

$margin: (
    0: 0,
    1: 5px,
    2: 10px,
    3: 15px,
    4: 20px,
    5: 24px,
    6: 30px,
    auto: auto,
);

$padding: (
    0: 0,
    1: 5px,
    2: 10px,
    3: 15px,
    4: 20px,
    5: 24px,
    6: 30px,
);

@each $mTag, $mVal in $margin {
    .m-#{$mTag} {
        margin: $mVal;
    }

    .mr-#{$mTag} {
        margin-right: $mVal;
    }

    .ml-#{$mTag} {
        margin-left: $mVal;
    }

    .mt-#{$mTag} {
        margin-top: $mVal;
    }

    .mb-#{$mTag} {
        margin-bottom: $mVal;
    }

    .mx-#{$mTag} {
        margin-left: $mVal;
        margin-right: $mVal;
    }

    .my-#{$mTag} {
        margin-top: $mVal;
        margin-bottom: $mVal;
    }
}

@each $pTag, $pVal in $padding {
    .p-#{$pTag} {
        padding: $pVal;
    }

    .pt-#{$pTag} {
        padding-top: $pVal;
    }

    .pb-#{$pTag} {
        padding-bottom: $pVal;
    }

    .pl-#{$pTag} {
        padding-left: $pVal;
    }

    .pr-#{$pTag} {
        padding-right: $pVal;
    }

    .px-#{$pTag} {
        padding-left: $pVal;
        padding-right: $pVal;
    }

    .py-#{$pTag} {
        padding-top: $pVal;
        padding-bottom: $pVal;
    }
}

// resource
#reader-view {
    width: 100vw;
    height: 100%;
    padding-bottom: 20px;
}

#top-menu-bar {
    display: flex;
    justify-content: space-between;
    padding: 15px 20px;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 9999;
    background-color: #fff;
    transition: all 0.5s ease-in-out;

    &.light {
        background-color: #fff;
    }

    &.brown {
        background-color: #e7d6bc;
    }

    &.green {
        background-color: #ccf1d0;
    }

    &.purple {
        background-color: #f9ecfd;
    }

    &.dark {
        background-color: #000;
        color: #FFF;
    }

    button {
        background-color: transparent;
        outline: none;
        border: none;

        img {
            width: 25px;
        }
    }
}

main {
    display: flex;
    flex-direction: column;
}

#bottom-menu-bar {
    padding: 15px 20px;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #fff;
    display: flex;
    flex-direction: column;

    &.light {
        background-color: #fff;
    }

    &.brown {
        background-color: #e7d6bc;
    }

    &.green {
        background-color: #ccf1d0;
    }

    &.purple {
        background-color: #f9ecfd;
    }

    &.dark {
        background-color: #000;
        color: #FFF;
    }

    input {
        width: 90%;
    }
}

.slider {
    width: 100%;
    height: 5px;
    background: #d3d3d3;
    outline: none;
    opacity: 0.7;
    -webkit-transition: 0.2s;
    transition: opacity 0.2s;
    border-radius: 25px;
}

#book-meta-content {
    width: 280px;
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    background-color: #fff;
    z-index: 99999;
    display: none;

    .content {
        padding: 20px;
        overflow-y: scroll;
        height: 100%;

        .item {
            display: flex;
            align-items: center;

            p {
                width: 200px;
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
            }

            img {
                margin-left: auto;
                width: 8px;
            }
        }
    }
}

.overlay {
    background-color: #0009;
    height: 100vh;
    width: 100vw;
    z-index: 99998;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    display: none;
}

#book-theme {
    padding: 20px;
    display: none;
    justify-content: space-between;
    position: absolute;
    top: 60px;
    left: 0;
    right: 0;
    border-radius: 0 0 5px 5px;
    box-shadow: 0 0 5px #ccc;
    background-color: #fff;

    .item {
        height: 45px;
        width: 45px;
        border-radius: 50%;

        &.light {
            background-color: #fff;
            border: 1px solid #000;
        }

        &.brown {
            background-color: #e7d6bc;
        }

        &.green {
            background-color: #ccf1d0;
        }

        &.purple {
            background-color: #f9ecfd;
        }

        &.dark {
            background-color: #000;
        }
    }
}


.font-sizer {
    padding: 20px;
    position: absolute;
    top: 60px;
    left: 0;
    right: 0;
    border-radius: 0 0 5px 5px;
    box-shadow: 0 0 5px #ccc;
    background-color: #fff;
    display: none;
    align-items: center;
}


// ranger

//Tick width & range thumb width need to be in sync, that's why I'm using the $unit variable.
$unit: 5px;


//Some range styling.
//Using mixins because each major browser needs a separate selector to style parts of the range input, combining selectors would invalidate the whole selector on each browser
@mixin range-track {
  -webkit-appearance: none;
  width: 100%;
  height: 1px;
  color: transparent;
  background: lightgray;
  border-radius: 999px;
  z-index: 2;
  border: none;
}

@mixin range-thumb {
  -webkit-appearance: none;
  height: $unit * 4;
  width: $unit * 4;
  border-radius: 30px;
  background: rgb(9, 87, 255);
  border: $unit solid #fff;
  filter: drop-shadow(0 0 5px #ccc);
  margin-top: -$unit*2;
  z-index: 3;
}

.ranger-custom {
  margin-bottom: -$unit*4;

  input[type=range] {
    -webkit-appearance: none;
    display: block;
    margin: 0;
    width: 100%;
    background: transparent;
  }

  input[type=range]::-webkit-slider-runnable-track {
    @include range-track();
  }

  input[type=range]::-moz-range-track {
    @include range-track();
  }

  input[type=range]::-ms-track {
    @include range-track();
  }

  input[type=range]::-ms-fill-lower {
    display: none;
  }

  input[type=range]::-ms-fill-upper {
    display: none;
  }

  input[type=range]::-webkit-slider-thumb {
    @include range-thumb();
  }

  input[type=range]::-moz-range-thumb {
    @include range-thumb();
  }

  input[type=range]::-ms-thumb {
    @include range-thumb();
  }




  //And now the ticks
  .ticks {
    display: flex;
    justify-content: space-between;

    //We need left & right padding that's half the width of the range thumb, so all ticks align with the center of the thumb
    padding: $unit $unit*2;
    margin-top: -12px;
    z-index: 1;
  }

  .tick {
    position: relative;
    display: flex;
    justify-content: center;
    width: 2px;
    background: lightgray;

    //Cap the height of the tick & push text down, so the tick renders as a little line and the text doesn't overlap the line. Also add margin, so the container expands enough that the next element you'll add won't overlap the ticks.
    height: 12px;
    margin-bottom: $unit*2;
  }

}
